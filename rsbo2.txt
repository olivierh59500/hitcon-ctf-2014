
rsbo-4a707e7d07e87ab97348be36efea28dc:     file format elf32-i386


Disassembly of section .init:

080483ac <_init>:
 80483ac:	53                   	push   %ebx
 80483ad:	83 ec 08             	sub    $0x8,%esp
 80483b0:	e8 0b 01 00 00       	call   80484c0 <__x86.get_pc_thunk.bx>
 80483b5:	81 c3 4b 1c 00 00    	add    $0x1c4b,%ebx
 80483bb:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80483c1:	85 c0                	test   %eax,%eax
 80483c3:	74 05                	je     80483ca <_init+0x1e>
 80483c5:	e8 46 00 00 00       	call   8048410 <__gmon_start__@plt>
 80483ca:	83 c4 08             	add    $0x8,%esp
 80483cd:	5b                   	pop    %ebx
 80483ce:	c3                   	ret    

Disassembly of section .plt:

080483d0 <read@plt-0x10>:
 80483d0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80483d6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483dc:	00 00                	add    %al,(%eax)
	...

080483e0 <read@plt>:
 80483e0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483e6:	68 00 00 00 00       	push   $0x0
 80483eb:	e9 e0 ff ff ff       	jmp    80483d0 <_init+0x24>

080483f0 <time@plt>:
 80483f0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483f6:	68 08 00 00 00       	push   $0x8
 80483fb:	e9 d0 ff ff ff       	jmp    80483d0 <_init+0x24>

08048400 <alarm@plt>:
 8048400:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048406:	68 10 00 00 00       	push   $0x10
 804840b:	e9 c0 ff ff ff       	jmp    80483d0 <_init+0x24>

08048410 <__gmon_start__@plt>:
 8048410:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048416:	68 18 00 00 00       	push   $0x18
 804841b:	e9 b0 ff ff ff       	jmp    80483d0 <_init+0x24>

08048420 <open@plt>:
 8048420:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048426:	68 20 00 00 00       	push   $0x20
 804842b:	e9 a0 ff ff ff       	jmp    80483d0 <_init+0x24>

08048430 <srand@plt>:
 8048430:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048436:	68 28 00 00 00       	push   $0x28
 804843b:	e9 90 ff ff ff       	jmp    80483d0 <_init+0x24>

08048440 <__libc_start_main@plt>:
 8048440:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048446:	68 30 00 00 00       	push   $0x30
 804844b:	e9 80 ff ff ff       	jmp    80483d0 <_init+0x24>

08048450 <write@plt>:
 8048450:	ff 25 28 a0 04 08    	jmp    *0x804a028
 8048456:	68 38 00 00 00       	push   $0x38
 804845b:	e9 70 ff ff ff       	jmp    80483d0 <_init+0x24>

08048460 <memset@plt>:
 8048460:	ff 25 2c a0 04 08    	jmp    *0x804a02c
 8048466:	68 40 00 00 00       	push   $0x40
 804846b:	e9 60 ff ff ff       	jmp    80483d0 <_init+0x24>

08048470 <rand@plt>:
 8048470:	ff 25 30 a0 04 08    	jmp    *0x804a030
 8048476:	68 48 00 00 00       	push   $0x48
 804847b:	e9 50 ff ff ff       	jmp    80483d0 <_init+0x24>

08048480 <close@plt>:
 8048480:	ff 25 34 a0 04 08    	jmp    *0x804a034
 8048486:	68 50 00 00 00       	push   $0x50
 804848b:	e9 40 ff ff ff       	jmp    80483d0 <_init+0x24>

Disassembly of section .text:

08048490 <_start>:
 8048490:	31 ed                	xor    %ebp,%ebp
 8048492:	5e                   	pop    %esi
 8048493:	89 e1                	mov    %esp,%ecx
 8048495:	83 e4 f0             	and    $0xfffffff0,%esp
 8048498:	50                   	push   %eax
 8048499:	54                   	push   %esp
 804849a:	52                   	push   %edx
 804849b:	68 b0 87 04 08       	push   $0x80487b0
 80484a0:	68 40 87 04 08       	push   $0x8048740
 80484a5:	51                   	push   %ecx
 80484a6:	56                   	push   %esi
 80484a7:	68 7f 86 04 08       	push   $0x804867f
 80484ac:	e8 8f ff ff ff       	call   8048440 <__libc_start_main@plt>
 80484b1:	f4                   	hlt    
 80484b2:	66 90                	xchg   %ax,%ax
 80484b4:	66 90                	xchg   %ax,%ax
 80484b6:	66 90                	xchg   %ax,%ax
 80484b8:	66 90                	xchg   %ax,%ax
 80484ba:	66 90                	xchg   %ax,%ax
 80484bc:	66 90                	xchg   %ax,%ax
 80484be:	66 90                	xchg   %ax,%ax

080484c0 <__x86.get_pc_thunk.bx>:
 80484c0:	8b 1c 24             	mov    (%esp),%ebx
 80484c3:	c3                   	ret    
 80484c4:	66 90                	xchg   %ax,%ax
 80484c6:	66 90                	xchg   %ax,%ax
 80484c8:	66 90                	xchg   %ax,%ax
 80484ca:	66 90                	xchg   %ax,%ax
 80484cc:	66 90                	xchg   %ax,%ax
 80484ce:	66 90                	xchg   %ax,%ax

080484d0 <deregister_tm_clones>:
 80484d0:	b8 43 a0 04 08       	mov    $0x804a043,%eax
 80484d5:	2d 40 a0 04 08       	sub    $0x804a040,%eax
 80484da:	83 f8 06             	cmp    $0x6,%eax
 80484dd:	77 01                	ja     80484e0 <deregister_tm_clones+0x10>
 80484df:	c3                   	ret    
 80484e0:	b8 00 00 00 00       	mov    $0x0,%eax
 80484e5:	85 c0                	test   %eax,%eax
 80484e7:	74 f6                	je     80484df <deregister_tm_clones+0xf>
 80484e9:	55                   	push   %ebp
 80484ea:	89 e5                	mov    %esp,%ebp
 80484ec:	83 ec 18             	sub    $0x18,%esp
 80484ef:	c7 04 24 40 a0 04 08 	movl   $0x804a040,(%esp)
 80484f6:	ff d0                	call   *%eax
 80484f8:	c9                   	leave  
 80484f9:	c3                   	ret    
 80484fa:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

08048500 <register_tm_clones>:
 8048500:	b8 40 a0 04 08       	mov    $0x804a040,%eax
 8048505:	2d 40 a0 04 08       	sub    $0x804a040,%eax
 804850a:	c1 f8 02             	sar    $0x2,%eax
 804850d:	89 c2                	mov    %eax,%edx
 804850f:	c1 ea 1f             	shr    $0x1f,%edx
 8048512:	01 d0                	add    %edx,%eax
 8048514:	d1 f8                	sar    %eax
 8048516:	75 01                	jne    8048519 <register_tm_clones+0x19>
 8048518:	c3                   	ret    
 8048519:	ba 00 00 00 00       	mov    $0x0,%edx
 804851e:	85 d2                	test   %edx,%edx
 8048520:	74 f6                	je     8048518 <register_tm_clones+0x18>
 8048522:	55                   	push   %ebp
 8048523:	89 e5                	mov    %esp,%ebp
 8048525:	83 ec 18             	sub    $0x18,%esp
 8048528:	89 44 24 04          	mov    %eax,0x4(%esp)
 804852c:	c7 04 24 40 a0 04 08 	movl   $0x804a040,(%esp)
 8048533:	ff d2                	call   *%edx
 8048535:	c9                   	leave  
 8048536:	c3                   	ret    
 8048537:	89 f6                	mov    %esi,%esi
 8048539:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

08048540 <__do_global_dtors_aux>:
 8048540:	80 3d 40 a0 04 08 00 	cmpb   $0x0,0x804a040
 8048547:	75 13                	jne    804855c <__do_global_dtors_aux+0x1c>
 8048549:	55                   	push   %ebp
 804854a:	89 e5                	mov    %esp,%ebp
 804854c:	83 ec 08             	sub    $0x8,%esp
 804854f:	e8 7c ff ff ff       	call   80484d0 <deregister_tm_clones>
 8048554:	c6 05 40 a0 04 08 01 	movb   $0x1,0x804a040
 804855b:	c9                   	leave  
 804855c:	f3 c3                	repz ret 
 804855e:	66 90                	xchg   %ax,%ax

08048560 <frame_dummy>:
 8048560:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 8048565:	85 c0                	test   %eax,%eax
 8048567:	74 1f                	je     8048588 <frame_dummy+0x28>
 8048569:	b8 00 00 00 00       	mov    $0x0,%eax
 804856e:	85 c0                	test   %eax,%eax
 8048570:	74 16                	je     8048588 <frame_dummy+0x28>
 8048572:	55                   	push   %ebp
 8048573:	89 e5                	mov    %esp,%ebp
 8048575:	83 ec 18             	sub    $0x18,%esp
 8048578:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 804857f:	ff d0                	call   *%eax
 8048581:	c9                   	leave  
 8048582:	e9 79 ff ff ff       	jmp    8048500 <register_tm_clones>
 8048587:	90                   	nop
 8048588:	e9 73 ff ff ff       	jmp    8048500 <register_tm_clones>

0804858d <init>:
 804858d:	55                   	push   %ebp
 804858e:	89 e5                	mov    %esp,%ebp
 8048590:	83 ec 38             	sub    $0x38,%esp
 8048593:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 804859a:	00 
 804859b:	c7 04 24 d0 87 04 08 	movl   $0x80487d0,(%esp)
 80485a2:	e8 79 fe ff ff       	call   8048420 <open@plt>
 80485a7:	89 45 ec             	mov    %eax,-0x14(%ebp)
 80485aa:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)
 80485b1:	00 
 80485b2:	8d 45 dc             	lea    -0x24(%ebp),%eax
 80485b5:	89 44 24 04          	mov    %eax,0x4(%esp)
 80485b9:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80485bc:	89 04 24             	mov    %eax,(%esp)
 80485bf:	e8 1c fe ff ff       	call   80483e0 <read@plt>
 80485c4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 80485cb:	e8 20 fe ff ff       	call   80483f0 <time@plt>
 80485d0:	89 45 f0             	mov    %eax,-0x10(%ebp) ; -0x10(ebp) = time
 80485d3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
 80485da:	eb 47                	jmp    8048623 <init+0x96>

loop:
 80485dc:	8b 45 f0             	mov    -0x10(%ebp),%eax ; eax = time
 80485df:	69 d0 39 05 00 00    	imul   $0x539,%eax,%edx
 80485e5:	8d 4d dc             	lea    -0x24(%ebp),%ecx ; buf
 80485e8:	8b 45 f4             	mov    -0xc(%ebp),%eax  ; i
 80485eb:	01 c8                	add    %ecx,%eax
 80485ed:	0f b6 00             	movzbl (%eax),%eax
 80485f0:	0f be c0             	movsbl %al,%eax
 80485f3:	8d 0c 02             	lea    (%edx,%eax,1),%ecx
 80485f6:	ba 01 00 00 40       	mov    $0x40000001,%edx
 80485fb:	89 c8                	mov    %ecx,%eax
 80485fd:	f7 ea                	imul   %edx
 80485ff:	c1 fa 1d             	sar    $0x1d,%edx
 8048602:	89 c8                	mov    %ecx,%eax
 8048604:	c1 f8 1f             	sar    $0x1f,%eax
 8048607:	29 c2                	sub    %eax,%edx
 8048609:	89 d0                	mov    %edx,%eax
 804860b:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804860e:	8b 55 f0             	mov    -0x10(%ebp),%edx
 8048611:	89 d0                	mov    %edx,%eax
 8048613:	c1 e0 1f             	shl    $0x1f,%eax
 8048616:	29 d0                	sub    %edx,%eax
 8048618:	29 c1                	sub    %eax,%ecx
 804861a:	89 c8                	mov    %ecx,%eax
 804861c:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804861f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp) ; i++
 8048623:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)
 8048627:	7e b3                	jle    80485dc <init+0x4f> ; loop

 8048629:	8b 45 ec             	mov    -0x14(%ebp),%eax
 804862c:	89 04 24             	mov    %eax,(%esp)
 804862f:	e8 4c fe ff ff       	call   8048480 <close@plt>
 8048634:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)
 804863b:	00 
 804863c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)
 8048643:	00 
 8048644:	8d 45 dc             	lea    -0x24(%ebp),%eax
 8048647:	89 04 24             	mov    %eax,(%esp)
 804864a:	e8 11 fe ff ff       	call   8048460 <memset@plt> ; mess up
 804864f:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8048652:	89 04 24             	mov    %eax,(%esp)
 8048655:	e8 d6 fd ff ff       	call   8048430 <srand@plt>
 804865a:	c9                   	leave  
 804865b:	c3                   	ret    

0804865c <read_80_bytes>:
 804865c:	55                   	push   %ebp
 804865d:	89 e5                	mov    %esp,%ebp
 804865f:	83 ec 18             	sub    $0x18,%esp
 8048662:	c7 44 24 08 80 00 00 	movl   $0x80,0x8(%esp)
 8048669:	00 
 804866a:	8b 45 08             	mov    0x8(%ebp),%eax
 804866d:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048671:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
 8048678:	e8 63 fd ff ff       	call   80483e0 <read@plt>
 804867d:	c9                   	leave  
 804867e:	c3                   	ret    

0804867f <main>:
 804867f:	55                   	push   %ebp
 8048680:	89 e5                	mov    %esp,%ebp
 8048682:	83 e4 f0             	and    $0xfffffff0,%esp
 8048685:	83 ec 70             	sub    $0x70,%esp
 8048688:	c7 04 24 1e 00 00 00 	movl   $0x1e,(%esp)
 804868f:	e8 6c fd ff ff       	call   8048400 <alarm@plt>
 8048694:	e8 f4 fe ff ff       	call   804858d <init>
 8048699:	8d 44 24 10          	lea    0x10(%esp),%eax
 804869d:	89 04 24             	mov    %eax,(%esp)
 80486a0:	e8 b7 ff ff ff       	call   804865c <read_80_bytes>

80486a5:	89 44 24 68          	mov    %eax,0x68(%esp) ; read_len
 80486a9:	c7 44 24 6c 00 00 00 	movl   $0x0,0x6c(%esp) ; i
 80486b0:	00 

 80486b1:	eb 55                	jmp    8048708 <main+0x89>

loop:
 80486b3:	e8 b8 fd ff ff       	call   8048470 <rand@plt>
 80486b8:	8b 54 24 6c          	mov    0x6c(%esp),%edx
 80486bc:	8d 4a 01             	lea    0x1(%edx),%ecx
 80486bf:	99                   	cltd   
 80486c0:	f7 f9                	idiv   %ecx
 80486c2:	89 54 24 64          	mov    %edx,0x64(%esp)
 80486c6:	8d 54 24 10          	lea    0x10(%esp),%edx
 80486ca:	8b 44 24 6c          	mov    0x6c(%esp),%eax
 80486ce:	01 d0                	add    %edx,%eax
 80486d0:	0f b6 00             	movzbl (%eax),%eax
 80486d3:	0f be c0             	movsbl %al,%eax
 80486d6:	89 44 24 60          	mov    %eax,0x60(%esp)
 80486da:	8d 54 24 10          	lea    0x10(%esp),%edx
 80486de:	8b 44 24 64          	mov    0x64(%esp),%eax
 80486e2:	01 d0                	add    %edx,%eax
 80486e4:	0f b6 00             	movzbl (%eax),%eax
 80486e7:	8d 4c 24 10          	lea    0x10(%esp),%ecx
 80486eb:	8b 54 24 6c          	mov    0x6c(%esp),%edx
 80486ef:	01 ca                	add    %ecx,%edx

 80486f1:	88 02                	mov    %al,(%edx)  ; oops...

 80486f3:	8b 44 24 60          	mov    0x60(%esp),%eax
 80486f7:	8d 4c 24 10          	lea    0x10(%esp),%ecx
 80486fb:	8b 54 24 64          	mov    0x64(%esp),%edx
 80486ff:	01 ca                	add    %ecx,%edx

 8048701:	88 02                	mov    %al,(%edx)  ; oops...

 8048703:	83 44 24 6c 01       	addl   $0x1,0x6c(%esp)
 8048708:	8b 44 24 6c          	mov    0x6c(%esp),%eax
 804870c:	3b 44 24 68          	cmp    0x68(%esp),%eax
 8048710:	7c a1                	jl     80486b3 <main+0x34>

 8048712:	8b 44 24 68          	mov    0x68(%esp),%eax
 8048716:	89 44 24 08          	mov    %eax,0x8(%esp)
 804871a:	8d 44 24 10          	lea    0x10(%esp),%eax
 804871e:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048722:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 8048729:	e8 22 fd ff ff       	call   8048450 <write@plt>
 804872e:	b8 00 00 00 00       	mov    $0x0,%eax
 8048733:	c9                   	leave  
 8048734:	c3                   	ret    
 8048735:	66 90                	xchg   %ax,%ax
 8048737:	66 90                	xchg   %ax,%ax
 8048739:	66 90                	xchg   %ax,%ax
 804873b:	66 90                	xchg   %ax,%ax
 804873d:	66 90                	xchg   %ax,%ax
 804873f:	90                   	nop

08048740 <__libc_csu_init>:
 8048740:	55                   	push   %ebp
 8048741:	57                   	push   %edi
 8048742:	31 ff                	xor    %edi,%edi
 8048744:	56                   	push   %esi
 8048745:	53                   	push   %ebx
 8048746:	e8 75 fd ff ff       	call   80484c0 <__x86.get_pc_thunk.bx>
 804874b:	81 c3 b5 18 00 00    	add    $0x18b5,%ebx
 8048751:	83 ec 1c             	sub    $0x1c,%esp
 8048754:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048758:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804875e:	e8 49 fc ff ff       	call   80483ac <_init>
 8048763:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048769:	29 c6                	sub    %eax,%esi
 804876b:	c1 fe 02             	sar    $0x2,%esi
 804876e:	85 f6                	test   %esi,%esi
 8048770:	74 27                	je     8048799 <__libc_csu_init+0x59>
 8048772:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048778:	8b 44 24 38          	mov    0x38(%esp),%eax
 804877c:	89 2c 24             	mov    %ebp,(%esp)
 804877f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048783:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048787:	89 44 24 04          	mov    %eax,0x4(%esp)
 804878b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048792:	83 c7 01             	add    $0x1,%edi
 8048795:	39 f7                	cmp    %esi,%edi
 8048797:	75 df                	jne    8048778 <__libc_csu_init+0x38>
 8048799:	83 c4 1c             	add    $0x1c,%esp
 804879c:	5b                   	pop    %ebx
 804879d:	5e                   	pop    %esi
 804879e:	5f                   	pop    %edi
 804879f:	5d                   	pop    %ebp
 80487a0:	c3                   	ret    
 80487a1:	eb 0d                	jmp    80487b0 <__libc_csu_fini>
 80487a3:	90                   	nop
 80487a4:	90                   	nop
 80487a5:	90                   	nop
 80487a6:	90                   	nop
 80487a7:	90                   	nop
 80487a8:	90                   	nop
 80487a9:	90                   	nop
 80487aa:	90                   	nop
 80487ab:	90                   	nop
 80487ac:	90                   	nop
 80487ad:	90                   	nop
 80487ae:	90                   	nop
 80487af:	90                   	nop

080487b0 <__libc_csu_fini>:
 80487b0:	f3 c3                	repz ret 

Disassembly of section .fini:

080487b4 <_fini>:
 80487b4:	53                   	push   %ebx
 80487b5:	83 ec 08             	sub    $0x8,%esp
 80487b8:	e8 03 fd ff ff       	call   80484c0 <__x86.get_pc_thunk.bx>
 80487bd:	81 c3 43 18 00 00    	add    $0x1843,%ebx
 80487c3:	83 c4 08             	add    $0x8,%esp
 80487c6:	5b                   	pop    %ebx
 80487c7:	c3                   	ret    
