
callme-69d26b77eb41e4eeba1d7b8402a8b165:     file format elf32-i386


Disassembly of section .init:

0804839c <.init>:
 804839c:	53                   	push   %ebx
 804839d:	83 ec 08             	sub    $0x8,%esp
 80483a0:	e8 eb 00 00 00       	call   8048490 <sprintf@plt+0x40>
 80483a5:	81 c3 5b 1c 00 00    	add    $0x1c5b,%ebx
 80483ab:	8b 83 fc ff ff ff    	mov    -0x4(%ebx),%eax
 80483b1:	85 c0                	test   %eax,%eax
 80483b3:	74 05                	je     80483ba <time@plt-0x16>
 80483b5:	e8 56 00 00 00       	call   8048410 <__gmon_start__@plt>
 80483ba:	83 c4 08             	add    $0x8,%esp
 80483bd:	5b                   	pop    %ebx
 80483be:	c3                   	ret    

Disassembly of section .plt:

080483c0 <time@plt-0x10>:
 80483c0:	ff 35 04 a0 04 08    	pushl  0x804a004
 80483c6:	ff 25 08 a0 04 08    	jmp    *0x804a008
 80483cc:	00 00                	add    %al,(%eax)
	...

080483d0 <time@plt>:
 80483d0:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 80483d6:	68 00 00 00 00       	push   $0x0
 80483db:	e9 e0 ff ff ff       	jmp    80483c0 <time@plt-0x10>

080483e0 <sleep@plt>:
 80483e0:	ff 25 10 a0 04 08    	jmp    *0x804a010
 80483e6:	68 08 00 00 00       	push   $0x8
 80483eb:	e9 d0 ff ff ff       	jmp    80483c0 <time@plt-0x10>

080483f0 <alarm@plt>:
 80483f0:	ff 25 14 a0 04 08    	jmp    *0x804a014
 80483f6:	68 10 00 00 00       	push   $0x10
 80483fb:	e9 c0 ff ff ff       	jmp    80483c0 <time@plt-0x10>

08048400 <__stack_chk_fail@plt>:
 8048400:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048406:	68 18 00 00 00       	push   $0x18
 804840b:	e9 b0 ff ff ff       	jmp    80483c0 <time@plt-0x10>

08048410 <__gmon_start__@plt>:
 8048410:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048416:	68 20 00 00 00       	push   $0x20
 804841b:	e9 a0 ff ff ff       	jmp    80483c0 <time@plt-0x10>

08048420 <strftime@plt>:
 8048420:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048426:	68 28 00 00 00       	push   $0x28
 804842b:	e9 90 ff ff ff       	jmp    80483c0 <time@plt-0x10>

08048430 <localtime@plt>:
 8048430:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048436:	68 30 00 00 00       	push   $0x30
 804843b:	e9 80 ff ff ff       	jmp    80483c0 <time@plt-0x10>

08048440 <__libc_start_main@plt>:
 8048440:	ff 25 28 a0 04 08    	jmp    *0x804a028
 8048446:	68 38 00 00 00       	push   $0x38
 804844b:	e9 70 ff ff ff       	jmp    80483c0 <time@plt-0x10>

08048450 <sprintf@plt>:
 8048450:	ff 25 2c a0 04 08    	jmp    *0x804a02c
 8048456:	68 40 00 00 00       	push   $0x40
 804845b:	e9 60 ff ff ff       	jmp    80483c0 <time@plt-0x10>

Disassembly of section .text:

08048460 <.text>:
_start
 8048460:	31 ed                	xor    %ebp,%ebp
 8048462:	5e                   	pop    %esi
 8048463:	89 e1                	mov    %esp,%ecx
 8048465:	83 e4 f0             	and    $0xfffffff0,%esp
 8048468:	50                   	push   %eax
 8048469:	54                   	push   %esp
 804846a:	52                   	push   %edx
 804846b:	68 80 88 04 08       	push   $0x8048880
 8048470:	68 10 88 04 08       	push   $0x8048810
 8048475:	51                   	push   %ecx
 8048476:	56                   	push   %esi
 8048477:	68 00 87 04 08       	push   $0x8048700
 804847c:	e8 bf ff ff ff       	call   8048440 <__libc_start_main@plt>
 8048481:	f4                   	hlt    
 8048482:	66 90                	xchg   %ax,%ax
 8048484:	66 90                	xchg   %ax,%ax
 8048486:	66 90                	xchg   %ax,%ax
 8048488:	66 90                	xchg   %ax,%ax
 804848a:	66 90                	xchg   %ax,%ax
 804848c:	66 90                	xchg   %ax,%ax
 804848e:	66 90                	xchg   %ax,%ax

thunk.bx
 8048490:	8b 1c 24             	mov    (%esp),%ebx
 8048493:	c3                   	ret    
 8048494:	66 90                	xchg   %ax,%ax
 8048496:	66 90                	xchg   %ax,%ax
 8048498:	66 90                	xchg   %ax,%ax
 804849a:	66 90                	xchg   %ax,%ax
 804849c:	66 90                	xchg   %ax,%ax
 804849e:	66 90                	xchg   %ax,%ax

deregister_tm_clones
 80484a0:	b8 3b a0 04 08       	mov    $0x804a03b,%eax
 80484a5:	2d 38 a0 04 08       	sub    $0x804a038,%eax
 80484aa:	83 f8 06             	cmp    $0x6,%eax
 80484ad:	77 01                	ja     80484b0 <sprintf@plt+0x60>
 80484af:	c3                   	ret    
 80484b0:	b8 00 00 00 00       	mov    $0x0,%eax
 80484b5:	85 c0                	test   %eax,%eax
 80484b7:	74 f6                	je     80484af <sprintf@plt+0x5f>
 80484b9:	55                   	push   %ebp
 80484ba:	89 e5                	mov    %esp,%ebp
 80484bc:	83 ec 18             	sub    $0x18,%esp
 80484bf:	c7 04 24 38 a0 04 08 	movl   $0x804a038,(%esp)
 80484c6:	ff d0                	call   *%eax
 80484c8:	c9                   	leave  
 80484c9:	c3                   	ret    
 80484ca:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

register_tm_clones
 80484d0:	b8 38 a0 04 08       	mov    $0x804a038,%eax
 80484d5:	2d 38 a0 04 08       	sub    $0x804a038,%eax
 80484da:	c1 f8 02             	sar    $0x2,%eax
 80484dd:	89 c2                	mov    %eax,%edx
 80484df:	c1 ea 1f             	shr    $0x1f,%edx
 80484e2:	01 d0                	add    %edx,%eax
 80484e4:	d1 f8                	sar    %eax
 80484e6:	75 01                	jne    80484e9 <sprintf@plt+0x99>
 80484e8:	c3                   	ret    
 80484e9:	ba 00 00 00 00       	mov    $0x0,%edx
 80484ee:	85 d2                	test   %edx,%edx
 80484f0:	74 f6                	je     80484e8 <sprintf@plt+0x98>
 80484f2:	55                   	push   %ebp
 80484f3:	89 e5                	mov    %esp,%ebp
 80484f5:	83 ec 18             	sub    $0x18,%esp
 80484f8:	89 44 24 04          	mov    %eax,0x4(%esp)
 80484fc:	c7 04 24 38 a0 04 08 	movl   $0x804a038,(%esp)
 8048503:	ff d2                	call   *%edx
 8048505:	c9                   	leave  
 8048506:	c3                   	ret    
 8048507:	89 f6                	mov    %esi,%esi
 8048509:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

__do_global_dtors_aux
 8048510:	80 3d 40 a0 04 08 00 	cmpb   $0x0,0x804a040
 8048517:	75 13                	jne    804852c <sprintf@plt+0xdc>
 8048519:	55                   	push   %ebp
 804851a:	89 e5                	mov    %esp,%ebp
 804851c:	83 ec 08             	sub    $0x8,%esp
 804851f:	e8 7c ff ff ff       	call   80484a0 <sprintf@plt+0x50>
 8048524:	c6 05 40 a0 04 08 01 	movb   $0x1,0x804a040
 804852b:	c9                   	leave  
 804852c:	f3 c3                	repz ret 
 804852e:	66 90                	xchg   %ax,%ax

frame_dummy:
 8048530:	a1 10 9f 04 08       	mov    0x8049f10,%eax
 8048535:	85 c0                	test   %eax,%eax
 8048537:	74 1f                	je     8048558 <sprintf@plt+0x108>
 8048539:	b8 00 00 00 00       	mov    $0x0,%eax
 804853e:	85 c0                	test   %eax,%eax
 8048540:	74 16                	je     8048558 <sprintf@plt+0x108>
 8048542:	55                   	push   %ebp
 8048543:	89 e5                	mov    %esp,%ebp
 8048545:	83 ec 18             	sub    $0x18,%esp
 8048548:	c7 04 24 10 9f 04 08 	movl   $0x8049f10,(%esp)
 804854f:	ff d0                	call   *%eax
 8048551:	c9                   	leave  
 8048552:	e9 79 ff ff ff       	jmp    80484d0 <sprintf@plt+0x80>
 8048557:	90                   	nop
 8048558:	e9 73 ff ff ff       	jmp    80484d0 <sprintf@plt+0x80>

show_msg(const char* time_str, const char* fmt):
 804855d:	55                   	push   %ebp
 804855e:	89 e5                	mov    %esp,%ebp
 8048560:	81 ec b8 00 00 00    	sub    $0xb8,%esp
 8048566:	8b 45 08             	mov    0x8(%ebp),%eax
 8048569:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%ebp)
 804856f:	8b 45 0c             	mov    0xc(%ebp),%eax
 8048572:	89 85 60 ff ff ff    	mov    %eax,-0xa0(%ebp)
 8048578:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804857e:	89 45 f4             	mov    %eax,-0xc(%ebp)
 8048581:	31 c0                	xor    %eax,%eax
 8048583:	c7 44 24 0c 60 a0 04 	movl   $0x804a060,0xc(%esp)
 804858a:	08 
 804858b:	8b 85 64 ff ff ff    	mov    -0x9c(%ebp),%eax
 8048591:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048595:	8b 85 60 ff ff ff    	mov    -0xa0(%ebp),%eax
 804859b:	89 44 24 04          	mov    %eax,0x4(%esp)
 804859f:	8d 85 74 ff ff ff    	lea    -0x8c(%ebp),%eax
 80485a5:	89 04 24             	mov    %eax,(%esp)
 80485a8:	e8 a3 fe ff ff       	call   8048450 <sprintf@plt>
 80485ad:	8d 85 74 ff ff ff    	lea    -0x8c(%ebp),%eax
 80485b3:	89 04 24             	mov    %eax,(%esp)
 80485b6:	e8 29 02 00 00       	call   80487e4 <print>
 80485bb:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80485be:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 80485c5:	74 05                	je     80485cc <ssp_ok>
 80485c7:	e8 34 fe ff ff       	call   8048400 <__stack_chk_fail@plt>
 80485cc:	c9                   	leave  
 80485cd:	c3                   	ret    

show():
 80485ce:	55                   	push   %ebp
 80485cf:	89 e5                	mov    %esp,%ebp
 80485d1:	81 ec 98 00 00 00    	sub    $0x98,%esp
 80485d7:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 80485dd:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80485e0:	31 c0                	xor    %eax,%eax
 80485e2:	c7 45 84 20 20 20 20 	movl   $0x20202020,-0x7c(%ebp)
 80485e9:	c7 45 88 20 20 20 20 	movl   $0x20202020,-0x78(%ebp)
 80485f0:	c7 45 8c 20 25 32 24 	movl   $0x24322520,-0x74(%ebp)  ; ' %2$'
 80485f7:	c7 45 90 73 0a 00 00 	movl   $0xa73,-0x70(%ebp)
 80485fe:	c7 45 94 25 73 25 73 	movl   $0x73257325,-0x6c(%ebp)
 8048605:	c7 45 98 0a 00 00 00 	movl   $0xa,-0x68(%ebp)
 804860c:	c7 45 9c 00 00 00 00 	movl   $0x0,-0x64(%ebp)
 8048613:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%ebp)
 804861a:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax  ; time_t*
 8048620:	89 04 24             	mov    %eax,(%esp)
 8048623:	e8 a8 fd ff ff       	call   80483d0 <time@plt>
 8048628:	8d 85 7c ff ff ff    	lea    -0x84(%ebp),%eax  ; time_t*
 804862e:	89 04 24             	mov    %eax,(%esp)
 8048631:	e8 fa fd ff ff       	call   8048430 <localtime@plt>
 8048636:	89 45 80             	mov    %eax,-0x80(%ebp)  ; struct tm
 8048639:	8b 45 80             	mov    -0x80(%ebp),%eax
 804863c:	89 44 24 0c          	mov    %eax,0xc(%esp)    ; 4th (tm)
 8048640:	c7 44 24 08 a0 88 04 	movl   $0x80488a0,0x8(%esp) ; 3rd (fmt)
 8048647:	08 
 8048648:	c7 44 24 04 50 00 00 	movl   $0x50,0x4(%esp)   ; 2nd (max)
 804864f:	00 
 8048650:	8d 45 a4             	lea    -0x5c(%ebp),%eax
 8048653:	89 04 24             	mov    %eax,(%esp)  ; 1st (out)
 8048656:	e8 c5 fd ff ff       	call   8048420 <strftime@plt>
 804865b:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx
 8048661:	a1 44 a0 04 08       	mov    0x804a044,%eax  ; prev
 8048666:	39 c2                	cmp    %eax,%edx
 8048668:	74 22                	je     804868c <same_time>

 804866a:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax
 8048670:	a3 44 a0 04 08       	mov    %eax,0x804a044
 8048675:	8d 45 84             	lea    -0x7c(%ebp),%eax ; "%s%s\n"
 8048678:	83 c0 10             	add    $0x10,%eax
 804867b:	89 44 24 04          	mov    %eax,0x4(%esp)
 804867f:	8d 45 a4             	lea    -0x5c(%ebp),%eax
 8048682:	89 04 24             	mov    %eax,(%esp)
 8048685:	e8 d3 fe ff ff       	call   804855d <show_msg>
 804868a:	eb 12                	jmp    804869e <done>
same_time:
 804868c:	8d 45 84             	lea    -0x7c(%ebp),%eax ; "   %2$s\n"
 804868f:	89 44 24 04          	mov    %eax,0x4(%esp)
 8048693:	8d 45 a4             	lea    -0x5c(%ebp),%eax
 8048696:	89 04 24             	mov    %eax,(%esp)
 8048699:	e8 bf fe ff ff       	call   804855d <show_msg>
done:
 804869e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 80486a1:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 80486a8:	74 05                	je     80486af <sprintf@plt+0x25f>
 80486aa:	e8 51 fd ff ff       	call   8048400 <__stack_chk_fail@plt>
 80486af:	c9                   	leave  
 80486b0:	c3                   	ret    


record_msg():
 80486b1:	55                   	push   %ebp
 80486b2:	89 e5                	mov    %esp,%ebp
 80486b4:	83 ec 18             	sub    $0x18,%esp

loop:
 80486b7:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)
 80486be:	00 
 80486bf:	c7 04 24 60 a0 04 08 	movl   $0x804a060,(%esp)
 80486c6:	e8 e5 00 00 00       	call   80487b0 <readline>

 80486cb:	0f b6 05 60 a0 04 08 	movzbl 0x804a060,%eax
 80486d2:	3c 45                	cmp    $0x45,%al
 80486d4:	75 21                	jne    80486f7 <sprintf@plt+0x2a7>
 80486d6:	0f b6 05 61 a0 04 08 	movzbl 0x804a061,%eax
 80486dd:	3c 4e                	cmp    $0x4e,%al
 80486df:	75 16                	jne    80486f7 <sprintf@plt+0x2a7>
 80486e1:	0f b6 05 62 a0 04 08 	movzbl 0x804a062,%eax
 80486e8:	3c 44                	cmp    $0x44,%al
 80486ea:	75 0b                	jne    80486f7 <sprintf@plt+0x2a7>
 80486ec:	0f b6 05 63 a0 04 08 	movzbl 0x804a063,%eax
 80486f3:	84 c0                	test   %al,%al
 80486f5:	74 07                	je     80486fe <done>

record:
 80486f7:	e8 d2 fe ff ff       	call   80485ce <show>
 80486fc:	eb b9                	jmp    80486b7 <loop>

done:
 80486fe:	c9                   	leave  
 80486ff:	c3                   	ret    

main():
 8048700:	55                   	push   %ebp
 8048701:	89 e5                	mov    %esp,%ebp
 8048703:	83 e4 f0             	and    $0xfffffff0,%esp
 8048706:	83 ec 20             	sub    $0x20,%esp
 8048709:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 804870f:	89 44 24 1c          	mov    %eax,0x1c(%esp)
 8048713:	31 c0                	xor    %eax,%eax
 8048715:	c7 04 24 1e 00 00 00 	movl   $0x1e,(%esp)
 804871c:	e8 cf fc ff ff       	call   80483f0 <alarm@plt>
 8048721:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)
 8048728:	00 

sleep_loop:
 8048729:	eb 1d                	jmp    8048748 <sprintf@plt+0x2f8>
 804872b:	c7 04 24 aa 88 04 08 	movl   $0x80488aa,(%esp)
 8048732:	e8 ad 00 00 00       	call   80487e4 <print>
 8048737:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)
 804873e:	e8 9d fc ff ff       	call   80483e0 <sleep@plt>
 8048743:	83 44 24 14 01       	addl   $0x1,0x14(%esp)
 8048748:	83 7c 24 14 02       	cmpl   $0x2,0x14(%esp)
 804874d:	7e dc                	jle    804872b <sprintf@plt+0x2db>

 804874f:	c7 04 24 ac 88 04 08 	movl   $0x80488ac,(%esp)
 8048756:	e8 89 00 00 00       	call   80487e4 <print>  ; Sorry
 804875b:	c7 04 24 e4 88 04 08 	movl   $0x80488e4,(%esp)
 8048762:	e8 7d 00 00 00       	call   80487e4 <print>  ; Msg?

 8048767:	c7 44 24 04 04 00 00 	movl   $0x4,0x4(%esp)
 804876e:	00 
 804876f:	8d 44 24 18          	lea    0x18(%esp),%eax
 8048773:	89 04 24             	mov    %eax,(%esp)
 8048776:	e8 35 00 00 00       	call   80487b0 <readline>

 804877b:	0f b6 44 24 18       	movzbl 0x18(%esp),%eax
 8048780:	3c 79                	cmp    $0x79,%al
 8048782:	75 07                	jne    804878b <sprintf@plt+0x33b>
 8048784:	e8 28 ff ff ff       	call   80486b1 <record_msg>
 8048789:	eb 0c                	jmp    8048797 <sprintf@plt+0x347>

 804878b:	c7 04 24 0b 89 04 08 	movl   $0x804890b,(%esp)
 8048792:	e8 4d 00 00 00       	call   80487e4 <print> ; Bye
 8048797:	8b 54 24 1c          	mov    0x1c(%esp),%edx
 804879b:	65 33 15 14 00 00 00 	xor    %gs:0x14,%edx
 80487a2:	74 05                	je     80487a9 <sprintf@plt+0x359>
 80487a4:	e8 57 fc ff ff       	call   8048400 <__stack_chk_fail@plt>
 80487a9:	c9                   	leave  
 80487aa:	c3                   	ret    

 80487ab:	66 90                	xchg   %ax,%ax
 80487ad:	66 90                	xchg   %ax,%ax
 80487af:	90                   	nop

readline():
 80487b0:	53                   	push   %ebx
 80487b1:	51                   	push   %ecx
 80487b2:	52                   	push   %edx
 80487b3:	56                   	push   %esi
 80487b4:	bb 00 00 00 00       	mov    $0x0,%ebx
 80487b9:	8b 4c 24 14          	mov    0x14(%esp),%ecx
 80487bd:	ba 01 00 00 00       	mov    $0x1,%edx
 80487c2:	8b 74 24 18          	mov    0x18(%esp),%esi
loop:
 80487c6:	83 ee 01             	sub    $0x1,%esi
 80487c9:	74 11                	je     80487dc <done>
 80487cb:	b8 03 00 00 00       	mov    $0x3,%eax
 80487d0:	cd 80                	int    $0x80
 80487d2:	80 39 0a             	cmpb   $0xa,(%ecx)
 80487d5:	74 05                	je     80487dc <done>
 80487d7:	83 c1 01             	add    $0x1,%ecx
 80487da:	eb ea                	jmp    80487c6 <loop>
done:
 80487dc:	c6 01 00             	movb   $0x0,(%ecx)
 80487df:	5e                   	pop    %esi
 80487e0:	5a                   	pop    %edx
 80487e1:	59                   	pop    %ecx
 80487e2:	5b                   	pop    %ebx
 80487e3:	c3                   	ret    

print():
 80487e4:	53                   	push   %ebx
 80487e5:	51                   	push   %ecx
 80487e6:	52                   	push   %edx
 80487e7:	bb 01 00 00 00       	mov    $0x1,%ebx
 80487ec:	8b 4c 24 10          	mov    0x10(%esp),%ecx
 80487f0:	ba 01 00 00 00       	mov    $0x1,%edx
loop:
 80487f5:	80 39 00             	cmpb   $0x0,(%ecx)
 80487f8:	74 0c                	je     8048806 <done>
 80487fa:	b8 04 00 00 00       	mov    $0x4,%eax
 80487ff:	cd 80                	int    $0x80
 8048801:	83 c1 01             	add    $0x1,%ecx
 8048804:	eb ef                	jmp    80487f5 <sprintf@plt+0x3a5>

done:
 8048806:	5a                   	pop    %edx
 8048807:	59                   	pop    %ecx
 8048808:	5b                   	pop    %ebx
 8048809:	c3                   	ret    

__libc_csu_init:
 804880a:	66 90                	xchg   %ax,%ax
 804880c:	66 90                	xchg   %ax,%ax
 804880e:	66 90                	xchg   %ax,%ax
 8048810:	55                   	push   %ebp
 8048811:	57                   	push   %edi
 8048812:	31 ff                	xor    %edi,%edi
 8048814:	56                   	push   %esi
 8048815:	53                   	push   %ebx
 8048816:	e8 75 fc ff ff       	call   8048490 <sprintf@plt+0x40>
 804881b:	81 c3 e5 17 00 00    	add    $0x17e5,%ebx
 8048821:	83 ec 1c             	sub    $0x1c,%esp
 8048824:	8b 6c 24 30          	mov    0x30(%esp),%ebp
 8048828:	8d b3 0c ff ff ff    	lea    -0xf4(%ebx),%esi
 804882e:	e8 69 fb ff ff       	call   804839c <time@plt-0x34>
 8048833:	8d 83 08 ff ff ff    	lea    -0xf8(%ebx),%eax
 8048839:	29 c6                	sub    %eax,%esi
 804883b:	c1 fe 02             	sar    $0x2,%esi
 804883e:	85 f6                	test   %esi,%esi
 8048840:	74 27                	je     8048869 <sprintf@plt+0x419>
 8048842:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 8048848:	8b 44 24 38          	mov    0x38(%esp),%eax
 804884c:	89 2c 24             	mov    %ebp,(%esp)
 804884f:	89 44 24 08          	mov    %eax,0x8(%esp)
 8048853:	8b 44 24 34          	mov    0x34(%esp),%eax
 8048857:	89 44 24 04          	mov    %eax,0x4(%esp)
 804885b:	ff 94 bb 08 ff ff ff 	call   *-0xf8(%ebx,%edi,4)
 8048862:	83 c7 01             	add    $0x1,%edi
 8048865:	39 f7                	cmp    %esi,%edi
 8048867:	75 df                	jne    8048848 <sprintf@plt+0x3f8>
 8048869:	83 c4 1c             	add    $0x1c,%esp
 804886c:	5b                   	pop    %ebx
 804886d:	5e                   	pop    %esi
 804886e:	5f                   	pop    %edi
 804886f:	5d                   	pop    %ebp
 8048870:	c3                   	ret    
 8048871:	eb 0d                	jmp    8048880 <sprintf@plt+0x430>
 8048873:	90                   	nop
 8048874:	90                   	nop
 8048875:	90                   	nop
 8048876:	90                   	nop
 8048877:	90                   	nop
 8048878:	90                   	nop
 8048879:	90                   	nop
 804887a:	90                   	nop
 804887b:	90                   	nop
 804887c:	90                   	nop
 804887d:	90                   	nop
 804887e:	90                   	nop
 804887f:	90                   	nop
 8048880:	f3 c3                	repz ret 

Disassembly of section .fini:

08048884 <.fini>:
 8048884:	53                   	push   %ebx
 8048885:	83 ec 08             	sub    $0x8,%esp
 8048888:	e8 03 fc ff ff       	call   8048490 <sprintf@plt+0x40>
 804888d:	81 c3 73 17 00 00    	add    $0x1773,%ebx
 8048893:	83 c4 08             	add    $0x8,%esp
 8048896:	5b                   	pop    %ebx
 8048897:	c3                   	ret    
